#!/bin/bash

# version
version="1.0.1"

# colors
WHITE="\e[97m"
RED="\e[31m"
YELLOW="\e[33m"
GREEN="\e[32m"
BLUE="\e[34m"
MAGENTA="\e[35m"
CYAN="\e[36m"
BLACK="\e[30m"
ENDCOLOR="\e[0m"

# uptime
puptime="$(uptime -p)"
puptime=${puptime:3}

# memory
totalmem=$(free -m | grep -oP '\d+' | head -n 1)
currmem=$(free -m | grep -oP '\d+' | head -n 2 | tail -1)

# distro name
distro=$(hostnamectl | sed -n -e 's/^.*Operating System: //p')
first_word_of_distro=$(echo $distro | head -n1 | sed -e 's/\s.*$//')

# battery info
battery_info1=$(upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E "state" | xargs)
battery_info2=$(upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E "to\ full" | xargs)
battery_info3=$(upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E "percentage" | xargs)


# This function is from 
# TrinityCoder/center_text_in_bash.md on Github

function print_centered {

     [[ $# == 0 ]] && return 1

     declare -i TERM_COLS="$(tput cols)"
     declare -i str_len="${#1}"
     [[ $str_len -ge $TERM_COLS ]] && {
          echo "$1";
          return 0;
     }

     declare -i filler_len="$(( (TERM_COLS - str_len) / 2 ))"
     [[ $# -ge 2 ]] && ch="${2:0:1}" || ch=" "
     filler=""
     for (( i = 0; i < filler_len; i++ )); do
          filler="${filler}${ch}"
     done

     printf "%s%s%s" "$filler" "$1" "$filler"
     [[ $(( (TERM_COLS - str_len) % 2 )) -ne 0 ]] && printf "%s" "${ch}"
     printf "\n"

     return 0
}


optc=
optb=

while getopts "bchv" opt; do
	case $opt in
		b ) optb="checked" ;;
		c )
			optc="checked" ;;
		h )
			print_centered "fetch-ke is a minimalistic, lightweight command-line system information tool written in bash"
			print_centered "." "."
			print_centered "options:"
			print_centered "-h | returns help message"
			print_centered "-b | disables long battery info"
			print_centered "-c | disables color output from fetch-ke"
			print_centered "-v | returns version of fetch-ke"
			exit 0
			;;
		v )
			print_centered "fetch-ke - $version"
			exit 0
			;;
		\? )
			print_centered "You have to use [-h], [-b], [-c] or [-v] options"
			exit 1
			;;
	esac
done

figlet -w $(tput cols) -c "$first_word_of_distro"
print_centered "user: $(whoami)"
print_centered "hname: $(hostname)"
print_centered "distro: $distro"
print_centered "kernel: $(uname -r)"
print_centered "uptime: $puptime"

if [[ -z $optb ]]
then
	print_centered "battery:"
	print_centered "·$battery_info1"
	print_centered "·$battery_info2"
	print_centered "·$battery_info3"
else
	print_centered "battery $battery_info3"
fi

print_centered "shell: $(echo $SHELL)"
print_centered "processes: $(ps -e | wc -l)"
print_centered "memory: $currmem | $totalmem"

if ! [[ -z $optc ]]
then
	echo 
	exit 0
fi

print_centered "colors:"

#color list:
w=$(print_centered "·white")
r=$(print_centered "·red")
ye=$(print_centered "·yellow")
gr=$(print_centered "·green")
bl=$(print_centered "·blue")
mag=$(print_centered "·magenta")
cy=$(print_centered "·cyan")

echo -e "${WHITE}$w${ENDCOLOR}"
echo -e "${RED}$r${ENDCOLOR}"
echo -e "${YELLOW}$ye${ENDCOLOR}"
echo -e "${GREEN}$gr${ENDCOLOR}"
echo -e "${BLUE}$bl${ENDCOLOR}"
echo -e "${MAGENTA}$mag${ENDCOLOR}"
echo -e "${CYAN}$cy${ENDCOLOR}"
